// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id                  String    @id @default(uuid())
  userId              String
  title               String
  description         String    @db.Text
  image               String
  country             String
  city                String
  state               String
  locationDescription String    @db.Text
  gym                 Boolean   @default(false)
  spa                 Boolean   @default(false)
  bar                 Boolean   @default(false)
  laundry             Boolean   @default(false)
  restaurant          Boolean   @default(false)
  shopping            Boolean   @default(false)
  freeParking         Boolean   @default(false)
  bikeRental          Boolean   @default(false)
  freeWifi            Boolean   @default(false)
  movieNights         Boolean   @default(false)
  swimmingPool        Boolean   @default(false)
  cofeeShop           Boolean   @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  rooms               Room[]
  bookings            Booking[]
}

model Room {
  id             String    @id @default(uuid())
  title          String
  description    String    @db.Text
  bedCount       Int       @default(0)
  guestCount     Int       @default(0)
  bathroomCount  Int       @default(0)
  kingBed        Int       @default(0)
  queenBed       Int       @default(0)
  image          String
  breakFastPrice Int
  roomPrice      Int
  roomService    Boolean   @default(false)
  TV             Boolean   @default(false)
  balcony        Boolean   @default(false)
  freeWifi       Boolean   @default(false)
  cityView       Boolean   @default(false)
  oceanView      Boolean   @default(false)
  forestView     Boolean   @default(false)
  mountainView   Boolean   @default(false)
  airCondition   Boolean   @default(false)
  soundProofed   Boolean   @default(false)
  bookings       Booking[]
  hotel          Hotel     @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId        String
}

model Booking {
  id                String   @id @default(uuid())
  title             String
  userName          String
  userId            String
  hotel             Hotel    @relation(fields: [hotelId], references: [id])
  hotelId           String
  hotelOwnerId      String
  startDate         DateTime
  endDate           DateTime
  breakfastIncluded Boolean
  currency          String
  totalPrice        Float
  paymentIntendId   String   @unique
  bookedAt          DateTime @default(now())
  paymentStatus     Boolean  @default(false)
  room              Room     @relation(fields: [roomId], references: [id])
  roomId            String
}
